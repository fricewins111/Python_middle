
'''
1. Каждое из слов «разработка», «сокет», «декоратор» представить в строковом формате и проверить тип и содержание
соответствующих переменных. Затем с помощью онлайн-конвертера преобразовать строковые представление в формат
Unicode и также проверить тип и содержимое переменных.
'''

a = ['разработка',
     'сокет',
     'декоратор',
     ]
b = {i: type(i) for i in a}
a = ['\u0440\u0430\u0437\u0440\u0430\u0431\u043E\u0442\u043A\u0430',
     '\u0441\u043E\u043A\u0435\u0442',
     '\u0434\u0435\u043A\u043E\u0440\u0430\u0442\u043E\u0440'
     ]
c = {i: type(i) for i in a}

print('Ответы к заданию 1:\n')

print(b)
print(c, '\n')

print('*'*50, '\n'*3)


'''
2. Каждое из слов «class», «function», «method» записать в байтовом типе без преобразования в последовательность кодов 
(не используя методы encode и decode) и определить тип, содержимое и длину соответствующих переменных.
'''
a = [b'class',
     b'function',
     b'method',
     ]
b = {i: [type(i), len(i)] for i in a}

print('Ответы к заданию 2:\n')
for i in a:
    print(i, '-' ,b[i])
print('\n', '*'*50, '\n'*3)


'''
3. Определить, какие из слов «attribute», «класс», «функция», «type» невозможно записать в байтовом типе.
'''

a = ['attribute',
     'класс',
     'функция',
     'type',
     ]

c = []
b = []

for i in a:
    try:
        c.append(bytes(i, 'ascii'))
    except:
        pass

c = [i.decode('utf-8') for i in c]

b = [i for i in a if i not in c]

print('Ответ на задание 3:\n')
for i in b:
    print(i)

print('\n', '*'*50, '\n'*3)


'''
4. Преобразовать слова «разработка», «администрирование», «protocol», «standard» из строкового представления в байтовое 
и выполнить обратное преобразование (используя методы encode и decode).
'''

print('Ответ на задание 4:\n')

a = ['разработка',
     'администрирование',
     'protocol',
     'standard',
     ]
print('\nПреобразование в байты:\n')
b = [i.encode('utf-8') for i in a]
for i in b:
    print(i)


print('\nОбратное преобразование:\n')

b = [i.decode('utf-8') for i in b]
for i in b:
    print(i)

print('\n', '*'*50, '\n'*3)



'''
5. Выполнить пинг веб-ресурсов yandex.ru, youtube.com и преобразовать результаты из байтовового в строковый тип 
на кириллице.
'''

import os

print('Ответ на задание 5:\n')

a = ['yandex.ru',
     'youtube.com',
     ]

for i in a:
    print('*'*10, '\nПингуем ресурс:', i)
    res = os.system('ping -c 2 ' + i)
    print(res)

print('\n', '*'*50, '\n'*3)

'''
6. Создать текстовый файл test_file.txt, заполнить его тремя строками: «сетевое программирование», «сокет», «декоратор».
 Проверить кодировку файла по умолчанию. Принудительно открыть файл в формате Unicode и вывести его содержимое.
'''


print('Ответ на задание 6:\n')

with open('test_file.txt', 'w', encoding='utf-8') as f:
    f.write('сетевое программирование\nсокет\nдекоратор')

with open('test_file.txt') as f:
    print(f)
    for i in f:
        print(i.encode('ascii', 'replace'))